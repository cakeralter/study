<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.caker.boot.repo.mapper.db1.ResourceMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, parent_id, name, code, icon, type, uri, status, create_time, update_time, sort
    </sql>

    <resultMap id="Base_Result_Map" type="Resource">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="code" column="code"/>
        <result property="icon" column="icon"/>
        <result property="type" column="type"/>
        <result property="uri" column="uri"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="sort" column="sort"/>
        <result property="parentId" column="parent_id"/>
    </resultMap>

    <resultMap id="Children_Map" extends="Base_Result_Map" type="Resource">
        <!--级联查询-->
        <collection property="children" column="id" ofType="Resource" select="findByParentId"/>
    </resultMap>

    <!--<resultMap id="Enabled_Map" extends="Base_Result_Map" type="Resource">
        <collection property="roles" column="id" ofType="string" select="findRoles"/>
    </resultMap>-->

    <select id="findAll" resultMap="Children_Map">
        select *
        from um_resource
        where parent_id is null
        order by sort
    </select>

    <select id="findByParentId" resultMap="Children_Map">
        select *
        from um_resource
        where parent_id = #{parentId}
        order by sort
    </select>

    <select id="findAllEnabled" resultType="Resource">
        select id, uri, code
        from um_resource
        where status = 1
          and uri is not null
          and uri != ''
        order by sort
    </select>

    <!--<select id="findRoles" resultType="string">
        select distinct tr.code
        from um_role tr
                 join um_role_resource trr on tr.id = trr.role_id
                 join um_resource tre on trr.resource_id = tre.id and tre.status = 1
        where tr.status = 1
          and tre.id = #{id}
    </select>-->

</mapper>
